## Detector map, format:
## crate slot start_channel end_channel
sbs.hcal.detmap =
## FADC modules        #     Module number that starts at channel 0
## This map is for the 12 fADC modules used for testing
## as described in https://logbooks.jlab.org/entry/3480927
#Active fADCs and their channels.
#  21    16     8     8	
#  22    19     0     11
#  22    20     0     11
  16   3      0     15 0
  16   4      0     15 0
  16   5      0     15 0
  16   6      0     15 0
  16   7      0     15 0
  16   8      0     15 0
  16   9      0     15 0
  16   10     0     15 0
  16   13     0     15 0
  16   14     0     15 0
  16   15     0     15 0
  16   16     0     15 0
  16   17     0     15 0
  16   18     0     15 0
  16   19     0     15 0
  16   20     0     15 0
  17   19     0     15 0 #     16
  17   20     0     15 0 #     16
  #17   18     0     0  0 # 1 channel. Ref fADC (copy of sum trig with pulse shaper).
  17    4     0    31 0 # 32 channels
  17    4     32   63 0 # 32 channels
  17    5     0    31 0 # 32 channels
  17    5     32   63 0 # 32 channels
  17    6     0    31 0 # 32 channels
  17    6     32   63 0 # 32 channels
  17    7     0    31 0 # 32 channels
  17    7     32   63 0 # 32 channels
  17    8     0    31 0 # 32 channels
  17    8     32   32 0 # 1 channel. Sum module trigger copy (logical).
  17    8     34   34 0 # 1 channel. Copy of DVCS pulser EDTM signal (logical).
  17    8     35   35 0 # 1 channel. Copy of BB trigger (logical).
  17    8     36   36 0 # 1 channel. RF (logical).

sbs.hcal.ledmap = 16 30

## Channel map from channel to logical channel
sbs.hcal.start_chanmap=1
sbs.hcal.chanmap = 
#fADC Logical Mapping
##   Ch1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16 #
##----------------------------------------------------------------
#1
#       1   7   2   8   3   9   4   10  5   11  6   12 
#       13  19  14  20  15  21  16  22  17  23  18  24
	73  79  74  80  75  81  76  82  77  83  78  84  109 115 110 116   #fADC 1
	85  91  86  92  87  93  88  94  89  95  90  96  111 117 112 118   #fADC 2
	97  103 98  104 99  105 100 106 101 107 102 108 113 119 114 120   #fADC 3
	121 127 122 128 123 129 124 130 125 131 126 132 13  19  14  20    #fADC 4
	133 139 134 140 135 141 136 142 137 143 138 144 15  21  16  22    #fADC 5 
	1   7   2   8   3   9   4   10  5   11  6   12  17  23  18  24    #fADC 6
	25  31  26  32  27  33  28  34  29  35  30  36  61  67  62  68    #fADC 7
	37  43  38  44  39  45  40  46  41  47  42  48  63  69  64  70    #fADC 8
	49  55  50  56  51  57  52  58  53  59  54  60  65  71  66  72    #fADC 9
	145 151 146 152 147 153 148 154 149 155 150 156 181 187 182 188   #fADC 10
 	157 163 158 164 159 165 160 166 161 167 162 168 183 189 184 190   #fADC 11
	169 175 170 176 171 177 172 178 173 179 174 180 185 191 186 192   #fADC 12
	193 199 194 200 195 201 196 202 197 203 198 204 229 235 230 236   #fADC 13
	205 211 206 212 207 213 208 214 209 215 210 216 231 237 232 238   #fADC 14
	217 223 218 224 219 225 220 226 221 227 222 228 233 239 234 240   #fADC 15
	241 247 242 248 243 249 244 250 245 251 246 252 277 283 278 284   #fADC 16
	253 259 254 260 255 261 256 262 257 263 258 264 279 285 280 286   #fADC 17
	265 271 266 272 267 273 268 274 269 275 270 276 281 287 282 288  #-1000  #fADC 18
#F1TDC Logical Mapping
##   Ch33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 #
##----------------------------------------------------------------
#1
#       13  19  14  20  15  21  16  22  17  23  18  24  1   7   2   8   3   9   4   10  5   11  6   12
       85  91  86  92  87  93  88  94  89  95  90  96  111 117 112 118 73  79  74  80  75  81  76  82  77  83  78  84  109 115 110 116  #TDC 1. Ribbons 1, 2.
       169 175 170 176 171 177 172 178 173 179 174 180 185 191 186 192 157 163 158 164 159 165 160 166 161 167 162 168 183 189 184 190  #TDC 1. Ribbons 11, 12.
       121 127 122 128 123 129 124 130 125 131 126 132 13  19  14  20  97  103 98  104 99  105 100 106 101 107 102 108 113 119 114 120  #TDC 2. Ribbons 3, 4.
       205 211 206 212 207 213 208 214 209 215 210 216 231 237 232 238 193 199 194 200 195 201 196 202 197 203 198 204 229 235 230 236  #TDC 2. Ribbons 13, 14.
       1   7   2   8   3   9   4   10  5   11  6   12  17  23  18  24  133 139 134 140 135 141 136 142 137 143 138 144 15  21  16  22   #TDC 3. Ribbons 5, 6.
       241 247 242 248 243 249 244 250 245 251 246 252 277 283 278 284 217 223 218 224 219 225 220 226 221 227 222 228 233 239 234 240  #TDC 3. Ribbons 15, 16.
       37  43  38  44  39  45  40  46  41  47  42  48  63  69  64  70  25  31  26  32  27  33  28  34  29  35  30  36  61  67  62  68   #TDC 4. Ribbons 7, 8.
       265 271 266 272 267 273 268 274 269 275 270 276 281 287 282 288 253 259 254 260 255 261 256 262 257 263 258 264 279 285 280 286  #TDC 4. Ribbons 17, 18.
##   Ch1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16
       145 151 146 152 147 153 148 154 149 155 150 156 181 187 182 188 49  55  50  56  51  57  52  58  53  59  54  60  65  71  66  72   -1000  -1000  -1000  -1000  #TDC 5. Ribbons 9, 10.       

## Positions in [m] where +z is roated by sbs.theta
sbs.hcal.position = 0 0 0

## HCal is composed of 4 sub-assemblies each of 6x12 (row,col) modules

## Test settings for one sub-assembly
sbs.hcal.size  =  1.8567  0.9461  1.0000

## HCal is a matrix of with nrows and ncols
## Numbers below are just a test so that it maches the number of used fADC's
#sbs.hcal.ncols = 12
#sbs.hcal.nrows = 16
sbs.hcal.nrows = 24
sbs.hcal.ncols = 12

## Position of first module
sbs.hcal.xyz    =  0.92835  0.47305 0.0
## Space between modules
#sbs.hcal.dxdydz  =  0.00254  0.00254 0.0
# Add 0.15m to space between of 0.00254m
sbs.hcal.dxdydz  =  0.15254  0.15254 0.0 

## Mininum energy  for a cluster center (not really used right now)
sbs.hcal.emin  = 0.0


## adc channels to mV assume F250 set fot 2V for 4096
sbs.hcal.adc.conv = 0.4882
# Threshold for pulse finding in waveform (mV)
sbs.hcal.adc.thres = 5.0 #5.0
# Number of bins (bin=4ns) at the beginning of waveform used to determing average Pedestal
sbs.hcal.adc.NPedBin = 4
# Number of bins (bin=4ns) before Threshold Bin to use in integrating pulse
sbs.hcal.adc.NSB = 3 #3
# Number of bins (bin=4ns) before Threshold Bin to use in integrating pulse
sbs.hcal.adc.NSA = 10 #10
# Number of bin for fixed Threshold if no Threshold Crossing is found
sbs.hcal.adc.FixThresBin = 14
# Convert adc integral in pC to GeV
sbs.hcal.adc.gain =
0.012448
0.00138706
0.00106088
0.00147302
0.00202518
0.00145792
0.00156426
0.00281879
0.00143734
0.000955855
0.0016836
0.00384408
0.00718033
0.0041766
0.00248179
0.00207181
0.00196909
0.00204247
0.00119673
0.000553799
0.000643895
0.00163457
0.00203579
0.00312963
0.00175
0.00181064
0.00194277
0.00203181
0.0018949
0.00163417
0.000607858
0.000912239
0.0013544
0.00186322
0.00167483
0.002196
0.000576926
0.00413082
0.00274493
0.00175296
0.00156081
0.00175278
0.00176845
0.00194284
0.00149383
0.00218393
0.00221408
0.00480366
0.00175
0.00301794
0.0030265
0.00188851
0.00185021
0.00158263
0.00193527
0.00183359
0.00177202
0.00197771
0.00183629
0.00277836
0.00422467
0.00408882
0.0026589
0.00159012
0.00171372
0.00172737
0.00170245
0.00168308
0.00179033
0.00147703
0.00292602
0.00314174
0.00384181
0.00122699
0.00127863
0.00133057
0.000938252
0.00114809
0.00172817
0.0016779
0.00173338
0.00218716
0.00234114
0.00399138
0.00144336
0.0040812
0.00216847
0.00220117
0.00187603
0.00177176
0.00191182
0.00167522
0.00172837
0.00187687
0.00298699
0.00264267
0.00454427
0.00353612
0.00373002
0.00224483
0.00195529
0.00160105
0.00115151
0.00176369
0.00166295
0.00195097
0.00189056
0.00348881
0.00406817
0.00452236
0.00312652
0.00236023
0.00168555
0.00146445
0.00176562
0.00153916
0.00174981
0.00182446
0.00262697
0.00366483
0.00721312
0.00473786
0.00257533
0.00217688
0.00180962
0.00168004
0.00169685
0.00168583
0.0016153
0.00185571
0.0020951
0.00338557
0.00634724
0.00454053
0.00357791
0.00089072
0.0019116
0.00166373
0.0014564
0.00176064
0.00206312
0.00197643
0.00334677
0.00244621
0.00416679
0.00226399
0.00252988
0.000544266
0.00153573
0.00114522
0.00194894
0.00190989
0.00223279
0.00178145
0.00360745
0.00481593
0.00314285
0.00395769
0.00257918
0.00182195
0.00146829
0.00210114
0.00208802
0.00239227
0.00287833
0.00352839
0.00346683
0.00285942
0.00703783
0.00540988
0.00382767
0.00217898
0.00238082
0.00240876
0.00250336
0.00224549
0.00263101
0.00138688
0.00448345
0.00519931
0.00342624
0.00481515
0.00420674
0.00353352
0.00163178
0.00165862
0.002488
0.00212629
0.00232334
0.00301833
0.00460776
0.00314776
0.0109938
0.00643501
0.00453798
0.00363771
0.00152526
0.00195122
0.00149192
0.001483
0.0019762
0.00326064
0.00372098
0.00294934
0.00767367
0.00362174
0.00593023
0.00263198
0.00177277
0.00172425
0.00190183
0.00170674
0.001732
0.00279784
0.003969
0.00423547
0.0030014
0.00318346
0.00441581
0.00310018
0.00193694
0.00195978
0.00178276
0.00215349
0.00179454
0.00241092
0.00425305
0.00263943
0.0105152
0.00436935
0.00282172
0.00265851
0.00120464
0.00207456
0.00188308
0.00168644
0.00229974
0.00290081
0.00475723
0.00622216
0.00388615
0.00594343
0.00572611
0.00348742
0.00230662
0.00171853
0.00228977
0.00242593
0.0024799
0.00236664
0.0039896
0.00448588
0.00854866
0.00604772
0.00344424
0.00248693
0.00207489
0.00207342
0.00232217
0.00214082
0.0022964
0.00266383
0.00453884
0.00398311
0.00175
0.00759322
0.00332487
0.0030229
0.00231307
0.00211987
0.00231482
0.00213306
0.00178274
0.0025316
0.00298703
0.0030268
0.0107674
0.00900109
0.00288502
0.00326704
0.00112905
0.00175
0.00227894
0.00265885
0.00222422
0.00229637
0.00215638
0.00357884
# 
sbs.hcal.tdc.offset =
6.31122
6.19864
8.89867
7.64475
-7.72338
-6.30348
-2.29412
-4.2148
7.95477
7.68067
8.98928
5.44022
9.28857
9.43363
7.48547
9.06917
-4.26752
-3.76132
-2.76876
-2.01504
10.1013
8.0651
8.32378
6.83678
7.66547
6.11925
8.37502
9.28695
-4.78689
-4.02952
-4.46346
-5.0971
9.39668
8.79251
7.13884
6.46886
11.349
11.6625
14.3837
13.1806
-0.627214
-1.12352
0
-0.0157792
11.5832
12.946
10.9849
8.55806
-1.49642
-1.15287
-1.04296
-0.145115
-8.62704
-11.9357
-12.5574
-12.9523
-0.554507
0.509712
-0.351878
-1.35425
13.2406
12.9669
14.9238
14.7745
-11.9541
-10.0035
2.13631
1.84958
16.552
15.2087
0.775445
0.889806
4.94206
9.0504
10.4875
11.0807
-4.33045
-2.60522
-2.49634
-4.09649
15.1228
13.68
9.43608
7.45322
11.3858
10.6095
11.631
10.9661
-0.825903
-1.61937
-2.4669
-1.17921
10.3323
13.116
7.98222
6.99877
13.3582
15.1214
13.5827
13.1911
0.703838
0.571627
2.39768
1.28996
13.6303
14.2027
13.4841
12.6041
9.85982
11.5211
12.8383
12.0732
2.18965
2.17765
2.21581
2.54462
14.4685
10.8074
13.1775
12.8775
15.5735
13.0611
12.8952
12.3372
4.46066
2.6272
4.71265
4.66913
13.7238
14.1011
12.8972
10.4173
12.7252
13.3374
14.3637
13.1939
0.352021
-0.818926
1.61084
1.77679
15.0918
14.4027
10.9454
10.6031
-3.50908
-1.67326
-2.00132
-0.310727
-14.1496
-12.3296
-13.4901
-12.5589
1.27422
0.206245
-0.537067
-1.89525
15.2883
13.3649
14.3279
12.4785
5.9707
1.67345
6.28664
4.85486
13.1724
13.5777
16.7245
12.743
11.6907
14.4956
13.5566
12.2945
2.73172
3.55737
5.31526
3.82268
13.0828
10.5947
12.3013
13.6721
0.0828089
-1.36344
15.3793
16.2295
4.00783
1.05778
-9.71197
-9.78746
14.7541
16.8671
13.1562
12.9927
11.5212
11.0484
15.4761
16.644
2.60778
5.26143
0.592505
-1.79572
17.926
15.8569
15.9485
12.5573
-8.81855
-8.53406
0.0279481
-3.3772
7.34988
6.59504
-14.7028
-15.7391
1.05206
-1.59587
18.1784
15.7829
12.3618
11.0123
16.442
14.261
-13.0829
-10.9361
3.47859
4.62878
16.205
14.5232
-1.6327
-4.84177
13.9376
16.7572
17.5587
17.9154
-15.7733
-14.9243
7.57652
5.03576
18.4623
20.0286
-4.62593
-4.99685
9.06649
12.5247
11.826
13.7375
-13.0486
-12.4817
3.83967
2.80976
13.3936
13.0083
-4.75293
-5.6404
10.3902
10.3228
14.3978
13.1298
1.94914
4.30138
7.84029
2.74697
13.166
12.2743
12.3696
9.01172
12.3185
16.1393
14.5298
13.5144
3.82626
5.74915
3.68725
4.50162
14.9882
12.9132
11.8854
12.3943
-6.46948
-5.91409
11.4611
10.4687
2.68443
4.49744
-14.2535
-17.677
13.082
11.1636
10.274
13.0963
# Divide above offsets by calibration constant first!
 sbs.hcal.tdc.calib = 0.112
# sbs.hcal.tdc.calib = 0.0936 #New constant from Hodo group for 1190. Will need to check if appropriate for f1s. 